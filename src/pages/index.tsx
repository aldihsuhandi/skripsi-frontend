import Head from "next/head";
import { ProductCard } from "@/Components/ProductCard";
import { TrendingIcon } from "@/Components/Icons/TrendingIcon";
import { Color, COLOR_HEX_STRING } from "@/Components/Color";
import { ItemSummary, ItemQueryResult } from "@/types";
import { useRouter } from "next/router";
import { ItemFilterQuery, ItemQuery, urlFirstString } from "@/helper";
import { useEffect, useState } from "react";

export default function Home() {
  const router = useRouter();
  const { q, hob, itemCat, inLev } = router.query;
  const [qString, setQString] = useState<string>();
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [items, setItems] = useState<ItemQueryResult | undefined>();

  // const mockData: ItemSummary = {
  //   itemId: "test",
  //   itemName: "Test Name",
  //   itemPrice: 69420,
  //   itemDescription: "Test Desc",
  //   itemQuantity: 10,
  //   itemCategory: "Test Cat",
  //   hobby: "Test Hob",
  //   merchantInfo: {
  //     email: "testEmail@mail.com",
  //     phoneNumber: "085674566685",
  //     username: "test",
  //     role: "MERCHANT",
  //     profilePicture: undefined,
  //     gmtCreate: new Date("2023-04-24 12:17:53"),
  //     gmtModified: new Date("2023-04-24 12:18:00"),
  //   },
  //   merchantLevel: "BEGINNER",
  //   itemImages: [],
  //   gmtCreate: new Date("2023-04-25 12:17:53"),
  //   gmtModified: new Date("2023-04-25 12:18:00"),
  // };

  //Idk wtf I'm doing awkokawkok
  useEffect(() => {
    const fetchingQueries = async () => {
      setQString(urlFirstString(q));
    };

    const renderResult = async () => {
      setIsLoading(true);
      await fetchingQueries();
      if (urlFirstString(q) === qString) {
        const itemQueried = await ItemFilterQuery({
          itemName: qString || "",
          hob: urlFirstString(hob),
          itemCat: urlFirstString(itemCat),
          inLev: urlFirstString(inLev),
        });
        setIsLoading(false);
        setItems(itemQueried);
      }
    };

    if (router.isReady) {
      renderResult();
    }
  }, [router.isReady, q, qString]);

  return (
    <>
      <Head>
        <title>ShumiShumi: Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="m-0 lg:mx-auto lg:max-w-screen-lg xl:max-w-screen-xl 2xl:max-w-screen-2xl ">
          <div className="flex px-2 pt-3">
            <p className="text-sm font-bold lg:text-lg">
              Section Title, ini yang placeholder (Maybe jadiin component pisah
              nanti idk)
            </p>
            <TrendingIcon
              htmlColor={COLOR_HEX_STRING[Color.BrightYellow]}
              classNameIcon="h-7 w-7"
            />
          </div>
          <div className="grid grid-cols-2 gap-4  py-2 px-2 lg:grid-cols-5 lg:py-4">
            {isLoading ? (
              <>Loading Placeholder</>
            ) : items?.resultContext.success ? (
              <>
                {items.items.map((data) => {
                  return <ProductCard itemData={data} />;
                })}
              </>
            ) : (
              <>Error! {items?.resultContext.resultMsg}</>
            )}
          </div>
        </div>
      </main>
    </>
  );
}
