import { ImagePreview } from "@/Components/ImagePreview";
import { UserSummary } from "@/types/User";
import { ErrorMessage, Field, FieldArray, Form, Formik } from "formik";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useRef, useState } from "react";
import { toast } from "react-toastify";
import * as Yup from "yup";
import { CreateReviewCall } from "@/helper/ReviewsHelper";
import { CreateReviewFormValues } from "@/types/Reviews";
import styles from "../../../styles/Form.module.css";
import { HiArrowLeftOnRectangle } from "react-icons/hi2";

const MAX_FILE_SIZE = 2 * 1024 * 1024; // 2MB
const SUPPORTED_FORMATS = ["image/jpg", "image/jpeg", "image/png"];

const initialValues: CreateReviewFormValues = {
  review: 0,
  interestLevel: "",
  description: "",
  images: [],
};

const CreateReviewSchema = Yup.object().shape({
  review: Yup.number()
    .required("Please Give it a Rating between 1 to 5")
    .min(1, "Minimum Rating That You Can Give is One!")
    .max(5, "Maximum Rating That You Can Give is Five!"),

  interestLevel: Yup.string().required("Interest Level is Required!"),

  description: Yup.string().notRequired(),

  images: Yup.mixed<File[]>()
    .notRequired()
    .test("fileSize", "One of the file exceeds the 2MB limit", (value) => {
      if (value && value?.length > 0) {
        for (let i = 0; i < value.length; i++) {
          if (value[i].size > 5242880) {
            return false;
          }
        }
      }
      return true;
    })
    .test(
      "fileType",
      "One of the file has unsupported file format",
      (value) => {
        if (value && value.length > 0) {
          for (let i = 0; i < value.length; i++) {
            if (
              value[i].type != "image/png" &&
              value[i].type != "image/jpg" &&
              value[i].type != "image/jpeg"
            ) {
              return false;
            }
          }
        }
        return true;
      }
    )
    .test("arrayLength", "Maximum is 10 images!", (value) => {
      if (value && value.length < 10) {
        return true;
      } else {
        return false;
      }
    }),
});

export default function CreateReview() {
  const router = useRouter();

  return (
    <>
      <Head>
        <title>Create Your Review</title>{" "}
        {/* --> [Improvement]Nanti ganti jadi: "Review: Nama Item nya"*/}
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="mx-auto p-4">
          <div className="mx-auto flex min-h-screen min-w-fit max-w-4xl flex-col rounded-lg bg-white shadow-[0px_10px_38px_-10px_rgba(22,_23,_24,_0.35),_0px_10px_20px_-15px_rgba(22,_23,_24,_0.2)]">
            <div className="sticky top-0 flex h-[41.6px] w-full flex-col items-center rounded-t-lg border-b-2 border-b-normal-blue shadow-md">
              <h1 className="pt-2">CREATE YOUR REVIEW FOR THIS PRODUCT</h1>
            </div>
            <div className="flex p-2">
              <button className="rounded-md border-normal-blue bg-normal-blue p-2 hover:border-bright-blue hover:bg-bright-blue">
                <span className="flex flex-row items-center">
                  <HiArrowLeftOnRectangle size={20} className="fill-white" />
                  <p className="pl-1 text-white">Go Back</p>
                </span>
              </button>
            </div>
            <div className="px-2 pb-2">
              <div className="flex h-full flex-col rounded-md border shadow-md">
                <h1>test</h1>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
