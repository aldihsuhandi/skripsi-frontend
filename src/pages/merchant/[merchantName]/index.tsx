import { MerchantPageNavigation } from "@/Components/MerchantInfo";
import { MerchantInfoPage } from "@/Components/MerchantInfo/MerchantInfoPage";
import { ProductCard } from "@/Components/ProductCard";
import { NotFoundWidget } from "@/Components/Widget";
import { ItemFilterQuery, UserQuery, urlFirstString } from "@/helper";
import { ItemQueryResult } from "@/types";
import { UserSummary } from "@/types/User";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

export default function MerchantPage() {
  // Di Page ini ntar show Merchant info dan list2 item mereka (singkat)
  // Ntar ada [merchantName]/item yang lbh detailed

  const router = useRouter();
  const { merchantName } = router.query;

  const [pageTitle, setPageTitle] = useState("");
  const [merchantData, setMerchantData] = useState<UserSummary | undefined>(
    undefined
  );
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [items, setItems] = useState<ItemQueryResult | undefined>();

  useEffect(() => {
    setPageTitle(urlFirstString(merchantName) + " Store Page");
    async function getMerchantInfo() {
      const checkMerchantName = urlFirstString(merchantName);
      if (checkMerchantName) {
        const merchantInfo = await UserQuery({
          key: checkMerchantName,
          identifier: "username",
        });

        if (merchantInfo?.resultContext.success) {
          setMerchantData(merchantInfo.userInfo);
          const newestItems = await ItemFilterQuery({
            numberOfItem: 5,
            filters: {
              itemName: "",
              merchantEmail: merchantInfo?.userInfo.email,
            },
          });
          if (newestItems) {
            if (newestItems.resultContext.success) {
              setIsLoading(false);
              setItems(newestItems);
            }
          }
        }
      }
    }

    getMerchantInfo();
  }, [router.isReady, merchantName]);

  return (
    <>
      <Head>
        <title>{pageTitle}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="m-0 flex min-h-screen flex-col py-0 lg:mx-auto lg:max-w-screen-lg lg:py-11 xl:max-w-screen-xl 2xl:max-w-screen-2xl">
          {merchantData ? (
            <>
              <MerchantInfoPage data={merchantData} />
              <MerchantPageNavigation merchantName={merchantData.username} />
              <h3 className="py-4 text-lg font-bold">Newest Items</h3>
              {isLoading && <>Loading</>}
              <br />

              <div className="grid grid-cols-2 gap-4 px-2 pb-2 lg:grid-cols-5 lg:py-4">
                {items?.items.length !== 0 && items ? (
                  <>
                    {items.items.map((data) => {
                      return <ProductCard itemData={data} />;
                    })}
                  </>
                ) : (
                  <>
                    <NotFoundWidget name="item" />
                  </>
                )}
              </div>
            </>
          ) : (
            "Merchant not found"
          )}
        </div>
      </main>
    </>
  );
}
