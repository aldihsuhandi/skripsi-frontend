import { ReviewCard } from "@/Components/ReviewsComponent/ReviewCard";
import { NotFoundWidget } from "@/Components/Widget";
import {
  ItemFilterQuery,
  UserQuery,
  parseNumberUndefined,
  urlFirstString,
} from "@/helper";
import { QueryReviewCall } from "@/helper/ReviewsHelper";
import { SessionValidate } from "@/helper/SessionHelper";
import { QueryReviewResult } from "@/types/Reviews";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import ReactPaginate from "react-paginate";
import styles from "../../../../styles/Paginate.module.css";
import { UserSummary } from "@/types/User";
import {
  MerchantInfoPage,
  MerchantPageNavigation,
} from "@/Components/MerchantInfo";
import { ProductCard } from "@/Components/ProductCard";

export default function MerchantReviews() {
  const router = useRouter();
  // const [userData, setUserData] = useState<UserSummary | undefined>(undefined);
  // const [isLoggedIn, setIsLoggedIn] = useState(false);
  const { page, merchantName } = router.query;
  const [currentPage, setCurrentPage] = useState(0);
  const [review, setReview] = useState<QueryReviewResult>();

  const [merchantData, setMerchantData] = useState<UserSummary | undefined>(
    undefined
  );
  const [pageTitle, setPageTitle] = useState("");
  const [merchant, setMerchant] = useState<string>("");

  useEffect(() => {
    console.log("test");
    // const checkSession = async () => {
    //   const isValidSession = await SessionValidate();
    //   if (!isValidSession) {
    //     router.push("/login");
    //   }
    // };

    const fetchQueriesPage = async () => {
      const tempPage = parseNumberUndefined(urlFirstString(page)) ?? 0;
      setCurrentPage(tempPage === 0 ? 0 : tempPage - 1);
    };

    const queryNeedReviews = async () => {
      await getMerchantInfo();
      await fetchQueriesPage();
      if (!merchant) {
        return;
      }
      const result = await QueryReviewCall(
        "MERCHANT",
        false,
        currentPage + 1,
        merchant
      );
      if (result && result.resultContext.success) {
        setReview(result);
      }
    };

    // setPageTitle(urlFirstString(merchantName) + " Store Page");
    async function getMerchantInfo() {
      const checkMerchantName = urlFirstString(merchantName);
      console.log(checkMerchantName);
      if (checkMerchantName) {
        const merchantInfo = await UserQuery({
          key: checkMerchantName,
          identifier: "username",
        });

        if (merchantInfo?.resultContext.success) {
          setMerchantData(merchantInfo.userInfo);
          setMerchant(merchantInfo.userInfo.username);
        }
      }

      // checkSession();
    }
    queryNeedReviews();
  }, [router.isReady, page, merchantName, merchant]);

  const ReviewWidget = () => {
    console.log(review);
    if (review && review.reviews && review.reviews.length != 0) {
      return review.reviews.map((data) => (
        <ReviewCard key={data.reviewId} reviewData={data} />
      ));
    } else {
      return (
        <>
          <NotFoundWidget name="review" />
        </>
      );
    }
  };

  const handlePageChange = (selectedPage: { selected: number }) => {
    setCurrentPage(selectedPage.selected);
    router.push({
      pathname: `/review`,
      query: {
        ...router.query,
        page: selectedPage.selected + 1,
      },
    });
  };

  return (
    <>
      <Head>
        <title>Review Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="m-0 flex min-h-screen flex-col py-0 lg:mx-auto lg:max-w-screen-lg lg:py-11 xl:max-w-screen-xl 2xl:max-w-screen-2xl">
          {/* <ReviewPageNavigation /> */}

          {merchantData ? (
            <>
              <MerchantInfoPage data={merchantData} />
              <MerchantPageNavigation merchantName={merchantData.username} />

              <br />
            </>
          ) : (
            "Merchant not found"
          )}
          {/* <h1>INI PAGE ISINYA BWT ITEM2 YG BLM DI REVIEW</h1> */}

          {ReviewWidget()}
          <div>
            {review && (
              <ReactPaginate
                pageCount={review.pagingContext.totalPage}
                onPageChange={handlePageChange}
                // initialPage={currentPage}
                forcePage={currentPage}
                nextLabel=">"
                previousLabel="<"
                breakLabel="..."
                // disableInitialCallback
                // Stylings
                containerClassName={styles.pagination}
                pageLinkClassName={styles.pagelink}
                activeClassName={styles.active}
                activeLinkClassName={styles.active}
                breakClassName={styles.pagelink}
                previousLinkClassName={styles.pagelink}
                nextLinkClassName={styles.pagelink}
                disabledLinkClassName={styles.disabled}
                renderOnZeroPageCount={null}
              />
            )}
          </div>
        </div>
      </main>
    </>
  );
}
